@charset "UTF-8";
html {
  font: menu;
  font-size: 12px;
  line-height: 1.5;
  padding: 18px; }

.foo__bar {
  /**
   * Immediately apply error states to all instances of the element…
   *
   * 1. Double up the selector’s specificity so that nothing in the Trumps
   *    layer accidentally overrides it (namely our check for single
   *    underscores).
   */
  /**
   * …but remove the errors if things are nested correctly.
   */ }
  .foo__bar.foo__bar {
    /* [1] */
    position: relative;
    outline: 1px solid red; }
    .foo__bar.foo__bar:after {
      position: absolute;
      bottom: 100%;
      left: 0;
      font: normal 12px/1 monospace;
      white-space: nowrap;
      padding: 2px;
      background-color: white;
      color: red; }
    .foo__bar.foo__bar:after {
      content: "ERROR: Element `." attr(class) "` should only appear within `.foo`."; }
  .foo .foo__bar {
    outline: none; }
    .foo .foo__bar:after {
      content: normal; }

/*------------------------------------*\
  #NUDGE
\*------------------------------------*/
/**
 * Improper Use of BEM Modifiers.
 *
 * By checking whether a class attribute contains two hyphens but no  space
 * (i.e. there’s only one class and it’s a Modifier), tell the developer that
 * they can’t use a Modifier without a corresponding Block.
 *
 * N.B. This isn’t bulletproof: `class="foo--bar baz"` would pass, as would
 *      `class=" foo--bar"`. Use with a pinch of salt.
 */
[class*="--"]:not([class*=" "]) {
  position: relative;
  outline: 1px solid red; }
  [class*="--"]:not([class*=" "]):after {
    position: absolute;
    bottom: 100%;
    left: 0;
    font: normal 12px/1 monospace;
    white-space: nowrap;
    padding: 2px;
    background-color: white;
    color: red; }
  [class*="--"]:not([class*=" "]):after {
    content: "ERROR: Cannot have a Modifier (i.e. `." attr(class) "`) without a Block."; }

/**
 * Underscores as Delimiters
 *
 * We should not be using single underscores in our classes. Mark as a warn and
 * not an error because we could be dealing with third party code that we have
 * no control over.
 */
[class*="_"] {
  position: relative;
  outline: 1px solid orange; }
  [class*="_"]:after {
    position: absolute;
    bottom: 100%;
    left: 0;
    font: normal 12px/1 monospace;
    white-space: nowrap;
    padding: 2px;
    background-color: white;
    color: orange; }
  [class*="_"]:after {
    content: "WARN: Do not use underscores to delimit strings"; }

[class*="__"] {
  outline: none; }
  [class*="__"]:after {
    content: normal; }

/**
 * Use of Camel Case
 *
 * We don’t want developers using camel case classes. Detect if the class
 * contains a capital letter and show a warning. Mark as a warn and not an error
 * because we could be dealing with third party code that we have no control
 * over.
 */
[class*="A"], [class*="B"], [class*="C"], [class*="D"], [class*="E"], [class*="F"], [class*="G"], [class*="H"], [class*="I"], [class*="J"], [class*="K"], [class*="L"], [class*="M"], [class*="N"], [class*="O"], [class*="P"], [class*="Q"], [class*="R"], [class*="S"], [class*="T"], [class*="U"], [class*="V"], [class*="W"], [class*="X"], [class*="Y"], [class*="Z"] {
  position: relative;
  outline: 1px solid orange; }
  [class*="A"]:after, [class*="B"]:after, [class*="C"]:after, [class*="D"]:after, [class*="E"]:after, [class*="F"]:after, [class*="G"]:after, [class*="H"]:after, [class*="I"]:after, [class*="J"]:after, [class*="K"]:after, [class*="L"]:after, [class*="M"]:after, [class*="N"]:after, [class*="O"]:after, [class*="P"]:after, [class*="Q"]:after, [class*="R"]:after, [class*="S"]:after, [class*="T"]:after, [class*="U"]:after, [class*="V"]:after, [class*="W"]:after, [class*="X"]:after, [class*="Y"]:after, [class*="Z"]:after {
    position: absolute;
    bottom: 100%;
    left: 0;
    font: normal 12px/1 monospace;
    white-space: nowrap;
    padding: 2px;
    background-color: white;
    color: orange; }
  [class*="A"]:after, [class*="B"]:after, [class*="C"]:after, [class*="D"]:after, [class*="E"]:after, [class*="F"]:after, [class*="G"]:after, [class*="H"]:after, [class*="I"]:after, [class*="J"]:after, [class*="K"]:after, [class*="L"]:after, [class*="M"]:after, [class*="N"]:after, [class*="O"]:after, [class*="P"]:after, [class*="Q"]:after, [class*="R"]:after, [class*="S"]:after, [class*="T"]:after, [class*="U"]:after, [class*="V"]:after, [class*="W"]:after, [class*="X"]:after, [class*="Y"]:after, [class*="Z"]:after {
    content: "WARN: Do not use camelCase in class names."; }

/*# sourceMappingURL=main.css.map */
